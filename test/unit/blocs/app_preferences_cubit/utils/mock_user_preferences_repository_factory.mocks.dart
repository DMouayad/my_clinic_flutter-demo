// Mocks generated by Mockito 5.3.2 from annotations
// in clinic_v2/test/unit/blocs/app_preferences_cubit/utils/mock_user_preferences_repository_factory.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i7;

import 'package:clinic_v2/domain/user_preferences/base/base_user_preferences.dart'
    as _i3;
import 'package:clinic_v2/domain/user_preferences/base/base_user_preferences_repository.dart'
    as _i4;
import 'package:clinic_v2/shared/models/result/result.dart' as _i1;
import 'package:flutter/material.dart' as _i6;
import 'package:mockito/mockito.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<V extends Object?, E extends _i1.AppError>
    extends _i2.SmartFake implements _i1.Result<V, E> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BaseUserPreferencesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseUserPreferencesRepository<T extends _i3.BaseUserPreferences>
    extends _i2.Mock implements _i4.BaseUserPreferencesRepository<T> {
  @override
  _i5.Future<dynamic> onInit() => (super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  void setUserPreferences(T? value) => super.noSuchMethod(
        Invocation.method(
          #setUserPreferences,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>> createUserPreferences(
    _i6.ThemeMode? themeMode,
    _i7.Locale? locale,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserPreferences,
          [
            themeMode,
            locale,
          ],
        ),
        returnValue: _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>>.value(
            _FakeResult_0<_i1.VoidValue, _i1.AppError>(
          this,
          Invocation.method(
            #createUserPreferences,
            [
              themeMode,
              locale,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>>.value(
                _FakeResult_0<_i1.VoidValue, _i1.AppError>(
          this,
          Invocation.method(
            #createUserPreferences,
            [
              themeMode,
              locale,
            ],
          ),
        )),
      ) as _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>>);
  @override
  _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>> loadUserPreferences() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadUserPreferences,
          [],
        ),
        returnValue: _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>>.value(
            _FakeResult_0<_i1.VoidValue, _i1.AppError>(
          this,
          Invocation.method(
            #loadUserPreferences,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>>.value(
                _FakeResult_0<_i1.VoidValue, _i1.AppError>(
          this,
          Invocation.method(
            #loadUserPreferences,
            [],
          ),
        )),
      ) as _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>>);
  @override
  _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>> updateUserThemePreference(
          _i6.ThemeMode? themeMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserThemePreference,
          [themeMode],
        ),
        returnValue: _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>>.value(
            _FakeResult_0<_i1.VoidValue, _i1.AppError>(
          this,
          Invocation.method(
            #updateUserThemePreference,
            [themeMode],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>>.value(
                _FakeResult_0<_i1.VoidValue, _i1.AppError>(
          this,
          Invocation.method(
            #updateUserThemePreference,
            [themeMode],
          ),
        )),
      ) as _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>>);
  @override
  _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>>
      updateUserLocalePreference(_i7.Locale? locale) => (super.noSuchMethod(
            Invocation.method(
              #updateUserLocalePreference,
              [locale],
            ),
            returnValue:
                _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>>.value(
                    _FakeResult_0<_i1.VoidValue, _i1.AppError>(
              this,
              Invocation.method(
                #updateUserLocalePreference,
                [locale],
              ),
            )),
            returnValueForMissingStub:
                _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>>.value(
                    _FakeResult_0<_i1.VoidValue, _i1.AppError>(
              this,
              Invocation.method(
                #updateUserLocalePreference,
                [locale],
              ),
            )),
          ) as _i5.Future<_i1.Result<_i1.VoidValue, _i1.AppError>>);
}
